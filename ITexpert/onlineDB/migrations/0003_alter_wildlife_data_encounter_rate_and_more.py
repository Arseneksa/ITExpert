# Generated by Django 4.0.3 on 2024-03-17 15:53

from django.db import migrations, models
import django.db.models.deletion
import onlineDB.models


class Migration(migrations.Migration):

    dependencies = [
        ('onlineDB', '0002_remove_wildlife_data_level'),
    ]

    operations = [
        migrations.AlterField(
            model_name='wildlife_data',
            name='encounter_rate',
            field=models.FloatField(null=True),
        ),
        migrations.AlterField(
            model_name='wildlife_datasmart',
            name='encounter_rate',
            field=models.FloatField(null=True),
        ),
        migrations.AlterField(
            model_name='wildlife_datasmart',
            name='level',
            field=models.CharField(default='block', max_length=255),
        ),
        migrations.CreateModel(
            name='Patrol_cover_dataSmart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024)], default=onlineDB.models.current_year)),
                ('level', models.CharField(default='block', max_length=255)),
                ('forest_cover_rate_min', models.FloatField(blank=True, null=True)),
                ('forest_cover_rate_max', models.FloatField(blank=True, null=True)),
                ('forest_cover_rate', models.FloatField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('block', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='onlineDB.block')),
                ('site', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='onlineDB.site')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='onlineDB.species')),
            ],
            options={
                'verbose_name_plural': 'Patrol cover data smart',
                'ordering': ['year'],
            },
        ),
        migrations.CreateModel(
            name='Patrol_cover_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024)], default=onlineDB.models.current_year)),
                ('patrol_cover_rate', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('block', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='onlineDB.block')),
                ('sampling', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='onlineDB.sampling')),
                ('site', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='onlineDB.site')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='onlineDB.species')),
            ],
            options={
                'verbose_name_plural': 'Patrol cover data',
                'ordering': ['year'],
            },
        ),
        migrations.CreateModel(
            name='Human_pressure_dataSmart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024)], default=onlineDB.models.current_year)),
                ('level', models.CharField(default='block', max_length=255)),
                ('encounter_rate_min', models.FloatField(blank=True, null=True)),
                ('encounter_rate_max', models.FloatField(blank=True, null=True)),
                ('encounter_rate', models.FloatField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('block', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='onlineDB.block')),
                ('site', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='onlineDB.site')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='onlineDB.species')),
            ],
            options={
                'verbose_name_plural': 'Human pressure data smart',
                'ordering': ['year'],
            },
        ),
        migrations.CreateModel(
            name='Human_pressure_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024)], default=onlineDB.models.current_year)),
                ('encounter_rate', models.FloatField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('block', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='onlineDB.block')),
                ('sampling', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='onlineDB.sampling')),
                ('site', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='onlineDB.site')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='onlineDB.species')),
            ],
            options={
                'verbose_name_plural': 'Human pressure data',
                'ordering': ['year'],
            },
        ),
        migrations.CreateModel(
            name='Forest_cover_dataSmart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024)], default=onlineDB.models.current_year)),
                ('level', models.CharField(default='block', max_length=255)),
                ('forest_cover_rate_min', models.FloatField(blank=True, null=True)),
                ('forest_cover_rate_max', models.FloatField(blank=True, null=True)),
                ('forest_cover_rate', models.FloatField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('block', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='onlineDB.block')),
                ('site', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='onlineDB.site')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='onlineDB.species')),
            ],
            options={
                'verbose_name_plural': 'Forest cover data smart',
                'ordering': ['year'],
            },
        ),
        migrations.CreateModel(
            name='Forest_cover_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024)], default=onlineDB.models.current_year)),
                ('forest_cover_rate', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('block', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='onlineDB.block')),
                ('sampling', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='onlineDB.sampling')),
                ('site', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='onlineDB.site')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='onlineDB.species')),
            ],
            options={
                'verbose_name_plural': 'Forest cover data',
                'ordering': ['year'],
            },
        ),
    ]
